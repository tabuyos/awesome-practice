plugins {
  id 'java'
  id 'org.kordamp.gradle.jandex' version '0.6.0'
  id 'application'
}

ext {
  mainClass='io.helidon.microprofile.cdi.Main'
}

dependencies {
  implementation("io.helidon.microprofile.bundles:helidon-microprofile")
  implementation("org.glassfish.jersey.media:jersey-media-json-binding")
  // implementation("jakarta.ws.rs:jakarta.ws.rs-api:3.0.0")
  // implementation("jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.1")
  // implementation("jakarta.inject:jakarta.inject-api:2.0.1")
  // implementation("jakarta.json:jakarta.json-api:2.0.1")
  runtimeOnly("org.jboss:jandex")
  runtimeOnly("jakarta.activation:jakarta.activation-api")
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

task copyLibs(type: Copy) {
  from configurations.runtimeClasspath
  into 'build/libs/libs'
}

copyLibs.dependsOn jar
assemble.dependsOn copyLibs

// jar {
//   archiveFileName = "${project.name}.jar"
//   manifest {
//     attributes ('Main-Class': "${project.mainClass}" ,
//         'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
//     )
//   }
// }

application {
  mainClass = "${project.mainClass}"
}

task moveBeansXML {
  doLast {
    ant.move file: "${buildDir}/resources/main/META-INF/beans.xml",
        todir: "${buildDir}/classes/java/main/META-INF"
  }
}
test.dependsOn moveBeansXML
run.dependsOn moveBeansXML
